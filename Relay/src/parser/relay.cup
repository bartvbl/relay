import java_cup.runtime.*;

/* terminals */

terminal NEW_LINE;
terminal NUMBER;
terminal COLON;
terminal SEMICOLON;
terminal DOT;
terminal IDENTIFYER;
terminal COMMA;

terminal BLOCK_OPEN;
terminal BLOCK_CLOSE;

terminal CODE_BLOCK_OPEN;
terminal CODE_BLOCK_CLOSE;

terminal UNIT_PIXELS;
terminal UNIT_PERCENT;

terminal OPERATOR_PLUS;
terminal OPERATOR_MINUS;

terminal KEYWORD_LINE;
terminal KEYWORD_FROM;
terminal KEYWORD_TO;

/* non-terminals */

non terminal goal;
non terminal block;
non terminal identifyer;
non terminal block_content_list;
non terminal block_content_line;
non terminal block_content_item;
non terminal block_property;
non terminal expression;
non terminal unit;
non terminal variable_access;
non terminal function_call;
non terminal code_block;
non terminal code_statement_list;
non terminal code_statement;

/* precedence rules */

precedence left OPERATOR_PLUS, OPERATOR_MINUS; 
precedence left NEW_LINE, BLOCK_CLOSE;

/* start symbol definition */

start with goal;

/* grammar definition */

goal ::=	
		block:block 																			{: RESULT = new RootNode(block); :}
	;

block ::=	
		BLOCK_OPEN identifyer:blockName NEW_LINE block_content_list:blockContent BLOCK_CLOSE 	{: RESULT = new BlockNode(name, blockContent); :}
	|	BLOCK_OPEN NEW_LINE block_content_lis:blockContent BLOCK_CLOSE							{: RESULT = new BlockNode("[untitled block]", blockContent); :}
	;

block_content_list ::=	
		/* empty */																				{: RESULT = null; :}
	|	block_content_list:remainingNodes block_content_line:listNode							{: RESULT = new ListNode(listNode, remainingNodes); :}
	;

block_content_line ::=
		block_content_item NEW_LINE
	|	block_content_item SEMICOLON
	;

block_content_item ::=
		block
	|	block_property
	|	code_block
	|	/* empty */
	;

code_block ::=
		CODE_BLOCK_OPEN code_statement_list CODE_BLOCK_CLOSE
	;

code_statement_list ::=
		code_statement code_statement_list
	|	code_statement
	;

code_statement ::=
		KEYWORD_LINE KEYWORD_FROM BLOCK_OPEN variable_access COMMA variable_access BLOCK_CLOSE KEYWORD_TO BLOCK_OPEN variable_access COMMA variable_access BLOCK_CLOSE
	;

block_property ::=
		identifyer COLON expression
	;

expression ::=
		NUMBER unit
	|	expression OPERATOR_PLUS expression
	|	expression OPERATOR_MINUS expression
	|	variable_access
	|	function_call
	;

function_call ::=
		IDENTIFYER BLOCK_OPEN variable_access BLOCK_CLOSE
	;

variable_access ::=
		identifyer DOT variable_access
	|	identifyer
	;

unit ::=
		UNIT_PIXELS
	|	UNIT_PERCENT
	;

identifyer ::=
		IDENTIFYER
	;